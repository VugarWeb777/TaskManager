{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/board-filter.js","webpack:///./src/components/board-template.js","webpack:///./src/components/filter.js","webpack:///./src/components/load-more-button.js","webpack:///./src/components/menu.js","webpack:///./src/components/search.js","webpack:///./src/components/task-edit.js","webpack:///./src/components/task.js","webpack:///./src/data.js","webpack:///./src/main.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA,oBAAoB,aAAa;AACjC;AACA,QAAQ,mCAAmC,MAAM;AACjD;AACA;AACA;AACA,uDAAuD;AACvD,wCAAwC,MAAM;AAC9C;AACA;AACA;;AAEO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAO;AACP;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAO,2BAA2B,wEAAwE;AAC1G;AACA,4CAA4C,MAAM,GAAG,mFAAmF;AACxI;AACA;AACA;AACA,gEAAgE,4BAA4B;AAC5F;AACA;AACA;AACA;AACA,iEAAiE,6BAA6B;AAC9F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA;;AAEA;AACA,6DAA6D,4EAA4E;AACzI;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA,+BAA+B,IAAI;AACnC,wBAAwB;AACxB;AACA,kEAAkE,IAAI;AACtE,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC,8DAA8D,MAAM;AACpE;AACA,yBAAyB,MAAM;AAC/B;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtIA;AAAA;AAAO,uBAAuB,wEAAwE;AACtG;AACA,uCAAuC,MAAM,GAAG,mFAAmF;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,4BAA4B;AAClG;AACA;AACA;AACA;AACA,uEAAuE,6BAA6B;AACpG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,YAAY;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF,qDAAqD,6BAA6B,KAAK,+BAA+B;AACtH;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AACuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAW;AACnB;AACA;AACA,GAAG;AACH,gBAAgB,gEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAAW;AACzB,aAAa,0DAAW;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;;AAGwB;;;;;;;;;;;;;AC/DxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC+C;AACI;AACA;;;AAGJ;AACS;;AAEO;;AAEL;AACI;;AAExB;;AAEtC;AACA;AACA;;AAEA;;AAEA,8DAA8D,qEAAY;AAC1E,8BAA8B,yEAAc;AAC5C,8BAA8B,yEAAc,CAAC,6CAAO;AACpD,8BAA8B,gFAAa;;AAE3C;AACA;;AAEA,6BAA6B,oFAAmB;;;AAGhD,6BAA6B,qFAAgB;;;AAG7C,2CAAK;AACL,kDAAkD,qEAAY;AAC9D,CAAC;AACD,gCAAgC,8EAAgB,CAAC,2CAAK;;AAEtD,2CAAK;;;;;;;;;;;;;ACzCL;AAAA;AAAA;AAAA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;;AAGwC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const boardFilterTemplate = ()=> {\n  return `<div class=\"board__filter-list\">\n          <a href=\"#\" class=\"board__filter\">SORT BY DEFAULT</a>\n          <a href=\"#\" class=\"board__filter\">SORT BY DATE up</a>\n          <a href=\"#\" class=\"board__filter\">SORT BY DATE down</a>\n        </div>`;\n};\n","export const boardTemplate = () => {\n  return `<section class=\"board container\">\n      <div class=\"board__tasks\"></div>\n    </section>`;\n};\n","const getFilter = ({title, count}) => {\n  return `\n      ${`<input type=\"radio\" id=\"filter__${title}\" \n      class=\"filter__input visually-hidden\" \n      name=\"filter\" \n      checked=\"\">\n      <label for=\"filter__all\" class=\"filter__label\">${title}\n      <span class=\"filter__all-count\">${count}</span>\n      </label>`}\n `;\n};\n\nexport const filterTemplate = (filters) => {\n  return `\n    <section class=\"main__filter filter container\"> \n      ${filters.map((filter) => getFilter(filter)).join(``)}\n    </section>\n  `;\n};\n","export const loadMoreTemplate = ()=> {\n  return `<button class=\"load-more\" type=\"button\">load more</button>`;\n};\n","export const menuTemplate = ()=> {\n  return `<section class=\"control__btn-wrap\">\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__new-task\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n            >+ ADD NEW TASK</label\n          >\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__task\"\n            class=\"control__input visually-hidden\"\n            checked\n          />\n          <label for=\"control__task\" class=\"control__label\">TASKS</label>\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__statistic\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__statistic\" class=\"control__label\"\n            >STATISTICS</label\n          >\n        </section>`;\n};\n","export const searchTemplate = function () {\n  return `<section class=\"main__search search container\">\n        <input\n          type=\"text\"\n          id=\"search__input\"\n          class=\"search__input\"\n          placeholder=\"START TYPING — SEARCH BY WORD, #HASHTAG OR DATE\"\n          value=\"#work\"\n        />\n        <label class=\"visually-hidden\" for=\"search__input\">Поиск</label>\n      </section>`;\n};\n","export const editTaskTemplate = ({description, dueDate, repeatingDays, tags, color, isFavorite, isArchive}) => {\n  return `\n    <article class=\"card card--edit card--${color} ${Object.keys(repeatingDays).some((day) => repeatingDays[day]) ? `card--repeat` : ``}\">\n      <form class=\"card__form\" method=\"get\">\n        <div class=\"card__inner\">\n          <div class=\"card__control\">\n            <button type=\"button\" class=\"card__btn card__btn--${isArchive ? `` : `disabled`}\">\n              archive\n            </button>\n            <button\n              type=\"button\"\n              class=\"card__btn card__btn--favorites card__btn--${isFavorite ? `` : `disabled`}\"\n            >\n              favorites\n            </button>\n          </div>\n    \n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n    \n          <div class=\"card__textarea-wrap\">\n            <label>\n              <textarea\n                class=\"card__text\"\n                placeholder=\"Start typing your text here...\"\n                name=\"text\"\n              >${description}</textarea>\n            </label>\n          </div>\n    \n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <button class=\"card__date-deadline-toggle\" type=\"button\">\n                  date: <span class=\"card__date-status\">yes</span>\n                </button>\n    \n                <fieldset class=\"card__date-deadline\">\n                  <label class=\"card__input-deadline-wrap\">\n                    <input\n                      class=\"card__date\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"date\"\n                      value=\"${new Date(dueDate).toDateString()}\"\n                    />\n                  </label>\n                </fieldset>\n    \n                <button class=\"card__repeat-toggle\" type=\"button\">\n                  repeat:<span class=\"card__repeat-status\">${Object.keys(repeatingDays).some((day) => repeatingDays[day]) ? `yes` : `no`}</span>\n                </button>\n    \n                <fieldset class=\"card__repeat-days\">\n                  <div class=\"card__repeat-days-inner\">\n                    ${Object.keys(repeatingDays).map((day)=> `\n                    <input\n                      class=\"visually-hidden card__repeat-day-input\"\n                      type=\"checkbox\"\n                      id=\"repeat-${day}-4\"\n                      name=\"repeat\"\n                      value=\"${day}\"\n                      ${(repeatingDays[day]) ? `checked` : ``}\n                    />\n                    <label class=\"card__repeat-day\" for=\"repeat-${day}-4\"\n                      >${day}</label\n                    >                  \n                    `).join(``)}\n                  </div>\n                </fieldset>\n              </div>\n    \n              <div class=\"card__hashtag\">\n                <div class=\"card__hashtag-list\">\n                ${Array.from(tags).map((tag)=> `\n                <span class=\"card__hashtag-inner\">\n                  <input\n                    type=\"hidden\"\n                    name=\"hashtag\"\n                    value=\"repeat\"\n                    class=\"card__hashtag-hidden-input\"\n                  />\n                  <p class=\"card__hashtag-name\">\n                    #${tag}\n                  </p>\n                  <button type=\"button\" class=\"card__hashtag-delete\">\n                    delete\n                  </button>\n                </span>\n               `).join(``)}\n                </div>\n    \n                <label>\n                  <input\n                    type=\"text\"\n                    class=\"card__hashtag-input\"\n                    name=\"hashtag-input\"\n                    placeholder=\"Type new hashtag here\"\n                  />\n                </label>\n              </div>\n            </div>\n    \n            <div class=\"card__colors-inner\">\n              <h3 class=\"card__colors-title\">Color</h3>\n              <div class=\"card__colors-wrap\">\n                <input\n                type=\"radio\"\n                id=\"color-${color}-4\"\n                class=\"card__color-input card__color-input--${color} visually-hidden\"\n                name=\"color\"\n                value=\"${color}\"\n                checked\n                />\n                <label\n                  for=\"color-black-4\"\n                  class=\"card__color card__color--${color}\"\n                  >${color}</label\n                >\n              </div>\n            </div>\n          </div>\n    \n          <div class=\"card__status-btns\">\n            <button class=\"card__save\" type=\"submit\">save</button>\n            <button class=\"card__delete\" type=\"button\">delete</button>\n          </div>\n        </div>\n      </form>\n    </article>    \n  `;\n};\n","export const taskTemplate = ({description, dueDate, repeatingDays, tags, color, isFavorite, isArchive})=> {\n  return `\n          <article class=\"card card--${color} ${Object.keys(repeatingDays).some((day) => repeatingDays[day]) ? `card--repeat` : ``}\">\n            <div class=\"card__form\">\n              <div class=\"card__inner\">\n                <div class=\"card__control\">\n                  <button type=\"button\" class=\"card__btn card__btn--edit\">\n                    edit\n                  </button>\n                 <button type=\"button\" class=\"card__btn  card__btn--${isArchive ? `` : `disabled`}\">\n                    archive\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"card__btn card__btn--favorites card__btn--${isFavorite ? `` : `disabled`}\"\n                  >\n                    favorites\n                  </button>\n                </div>\n\n                <div class=\"card__color-bar\">\n                  <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                    <use xlink:href=\"#wave\"></use>\n                  </svg>\n                </div>\n\n                <div class=\"card__textarea-wrap\">\n                  <p class=\"card__text\">${description}</p>\n                </div>\n\n                <div class=\"card__settings\">\n                  <div class=\"card__details\">\n                    <div class=\"card__dates\">\n                      <div class=\"card__date-deadline\">\n                        <p class=\"card__input-deadline-wrap\">\n                          <span class=\"card__date\">${new Date(dueDate).toDateString()}</span>\n                          <span class=\"card__time\">${new Date(dueDate).getHours()} : ${new Date(dueDate).getMinutes()}</span>\n                        </p>\n                      </div>\n                    </div>\n\n                    <div class=\"card__hashtag\">\n                      <div class=\"card__hashtag-list\">\n                      ${Array.from(tags).map((tag)=> `\n                       <span class=\"card__hashtag-inner\">\n                          <span class=\"card__hashtag-name\">\n                            ${tag}\n                          </span>\n                        </span>\n                      `).join(``)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </article>\n`;\n};\n","/* eslint-disable no-console */\nimport {randBoolean, arrayRandomLength} from \"./utils\";\n\nconst getTasks = () => ({\n  description: [`Изучить теорию`, `Сделать домашку`, `Пройти интенсив на соточку`][Math.floor(Math.random() * 3)],\n  dueDate: Date.now() + 1 + Math.floor(Math.random() * 14) * 24 * 60 * 60 * 1000 - (7 * 24 * 60 * 60 * 1000),\n  repeatingDays: {\n    Mo: false,\n    Tu: false,\n    We: false,\n    Th: false,\n    Fr: randBoolean(),\n    Sa: false,\n    Su: false,\n  },\n  tags: new Set(arrayRandomLength([\n    `homework`,\n    `theory`,\n    `practice`,\n    `intensive`,\n    `learning`,\n  ]\n  )),\n  color: [`black`, `yellow`, `blue`, `green`, `pink`][Math.floor(Math.random() * 5)],\n  isFavorite: randBoolean(),\n  isArchive: randBoolean(),\n});\n\nconst tasks = new Array(3).fill(``).map(getTasks);\nconst filters = [\n  {\n    title: `All`,\n    count: tasks.length,\n  },\n  {\n    title: `Overdue`,\n    count: tasks.filter((value) => value.dueDate < Date.now()).length,\n  },\n  {\n    title: `Today`,\n    count: tasks.filter((value) => new Date(value.dueDate).toDateString() === new Date(Date.now()).toDateString()).length,\n  },\n  {\n    title: `Favorites`,\n    count: tasks.filter((value) => value.isFavorite === true).length,\n  },\n  {\n    title: `Repeating `,\n    count: tasks.filter((value) => {\n      return (Object.values(value.repeatingDays).some((day) => day));\n    }).length,\n  },\n  {\n    title: `Tags`,\n    count: tasks.filter((value) => value.tags).length,\n  },\n  {\n    title: `Archive`,\n    count: tasks.filter((value) => value.isArchive === true).length,\n  },\n];\n\n\nexport {tasks, filters};\n","/* eslint-disable no-console */\nimport {menuTemplate} from \"./components/menu\";\nimport {searchTemplate} from \"./components/search\";\nimport {filterTemplate} from \"./components/filter\";\n\n\nimport {taskTemplate} from \"./components/task\";\nimport {editTaskTemplate} from \"./components/task-edit\";\n\nimport {loadMoreTemplate} from \"./components/load-more-button\";\n\nimport {boardTemplate} from \"./components/board-template\";\nimport {boardFilterTemplate} from \"./components/board-filter\";\n\nimport {tasks, filters} from \"./data\";\n\nconst renderTemplate = (container, template, type = `beforeend`) => {\n  container.insertAdjacentHTML(type, template);\n};\n\nconst mainContainer = document.querySelector(`.main`);\n\nrenderTemplate(mainContainer.querySelector(`.main__control`), menuTemplate());\nrenderTemplate(mainContainer, searchTemplate());\nrenderTemplate(mainContainer, filterTemplate(filters));\nrenderTemplate(mainContainer, boardTemplate());\n\nconst boardElement = mainContainer.querySelector(`.board`);\nconst taskListElement = mainContainer.querySelector(`.board__tasks`);\n\nrenderTemplate(boardElement, boardFilterTemplate(), `afterBegin`);\n\n\nrenderTemplate(boardElement, loadMoreTemplate());\n\n\ntasks.forEach((task) => {\n  taskListElement.insertAdjacentHTML(`beforeend`, taskTemplate(task));\n});\nrenderTemplate(taskListElement, editTaskTemplate(tasks[0]), `afterBegin`);\n\ntasks.forEach((value) => console.log(value.dueDate));\n","const randBoolean = ()=> Boolean(Math.round(Math.random()));\n\nconst arrayRandomLength = (arr) => {\n  let newArr = arr.slice();\n\n  for (let i = 0; i < newArr.length; i++) {\n    let num = Math.floor(Math.random() * (i + 1));\n    [newArr[num], newArr[i]] = [newArr[i], newArr[num]];\n  }\n  return newArr.slice(0, Math.floor(Math.random() * arr.length - 1));\n};\n\n\nexport {randBoolean, arrayRandomLength};\n"],"sourceRoot":""}